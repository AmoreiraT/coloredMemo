import 'styled-components';
import { Color } from '../shared/utils/globalTypes/types';

interface Typography {
  fontSize: number;
  fontFamily: string;
  paragraphIndent: number;
  paragraphSpacing: number;
  fontWeight: number;
  letterSpacing: string;
  lineHeight: string;
}

declare module 'styled-components' {
  export interface DefaultTheme {
    color: {
      seed: Color;
      coreColors: {
        primary: Color;
      };
      extendedColors: [];
      schemes: {
        light: {
          primary: Color;
          surfaceTint: Color;
          onPrimary: Color;
          primaryContainer: Color;
          onPrimaryContainer: Color;
          secondary: Color;
          onSecondary: Color;
          secondaryContainer: Color;
          onSecondaryContainer: Color;
          tertiary: Color;
          onTertiary: Color;
          tertiaryContainer: Color;
          onTertiaryContainer: Color;
          error: Color;
          onError: Color;
          errorContainer: Color;
          onErrorContainer: Color;
          background: Color;
          onBackground: Color;
          surface: Color;
          onSurface: Color;
          surfaceVariant: Color;
          onSurfaceVariant: Color;
          outline: Color;
          outlineVariant: Color;
          shadow: Color;
          scrim: Color;
          inverseSurface: Color;
          inverseOnSurface: Color;
          inversePrimary: Color;
          primaryFixed: Color;
          onPrimaryFixed: Color;
          primaryFixedDim: Color;
          onPrimaryFixedVariant: Color;
          secondaryFixed: Color;
          onSecondaryFixed: Color;
          secondaryFixedDim: Color;
          onSecondaryFixedVariant: Color;
          tertiaryFixed: Color;
          onTertiaryFixed: Color;
          tertiaryFixedDim: Color;
          onTertiaryFixedVariant: Color;
          surfaceDim: Color;
          surfaceBright: Color;
          surfaceContainerLowest: Color;
          surfaceContainerLow: Color;
          surfaceContainer: Color;
          surfaceContainerHigh: Color;
          surfaceContainerHighest: Color;
        };
        'light-medium-contrast': {
          primary: Color;
          surfaceTint: Color;
          onPrimary: Color;
          primaryContainer: Color;
          onPrimaryContainer: Color;
          secondary: Color;
          onSecondary: Color;
          secondaryContainer: Color;
          onSecondaryContainer: Color;
          tertiary: Color;
          onTertiary: Color;
          tertiaryContainer: Color;
          onTertiaryContainer: Color;
          error: Color;
          onError: Color;
          errorContainer: Color;
          onErrorContainer: Color;
          background: Color;
          onBackground: Color;
          surface: Color;
          onSurface: Color;
          surfaceVariant: Color;
          onSurfaceVariant: Color;
          outline: Color;
          outlineVariant: Color;
          shadow: Color;
          scrim: Color;
          inverseSurface: Color;
          inverseOnSurface: Color;
          inversePrimary: Color;
          primaryFixed: Color;
          onPrimaryFixed: Color;
          primaryFixedDim: Color;
          onPrimaryFixedVariant: Color;
          secondaryFixed: Color;
          onSecondaryFixed: Color;
          secondaryFixedDim: Color;
          onSecondaryFixedVariant: Color;
          tertiaryFixed: Color;
          onTertiaryFixed: Color;
          tertiaryFixedDim: Color;
          onTertiaryFixedVariant: Color;
          surfaceDim: Color;
          surfaceBright: Color;
          surfaceContainerLowest: Color;
          surfaceContainerLow: Color;
          surfaceContainer: Color;
          surfaceContainerHigh: Color;
          surfaceContainerHighest: Color;
        };
        'light-high-contrast': {
          primary: Color;
          surfaceTint: Color;
          onPrimary: Color;
          primaryContainer: Color;
          onPrimaryContainer: Color;
          secondary: Color;
          onSecondary: Color;
          secondaryContainer: Color;
          onSecondaryContainer: Color;
          tertiary: Color;
          onTertiary: Color;
          tertiaryContainer: Color;
          onTertiaryContainer: Color;
          error: Color;
          onError: Color;
          errorContainer: Color;
          onErrorContainer: Color;
          background: Color;
          onBackground: Color;
          surface: Color;
          onSurface: Color;
          surfaceVariant: Color;
          onSurfaceVariant: Color;
          outline: Color;
          outlineVariant: Color;
          shadow: Color;
          scrim: Color;
          inverseSurface: Color;
          inverseOnSurface: Color;
          inversePrimary: Color;
          primaryFixed: Color;
          onPrimaryFixed: Color;
          primaryFixedDim: Color;
          onPrimaryFixedVariant: Color;
          secondaryFixed: Color;
          onSecondaryFixed: Color;
          secondaryFixedDim: Color;
          onSecondaryFixedVariant: Color;
          tertiaryFixed: Color;
          onTertiaryFixed: Color;
          tertiaryFixedDim: Color;
          onTertiaryFixedVariant: Color;
          surfaceDim: Color;
          surfaceBright: Color;
          surfaceContainerLowest: Color;
          surfaceContainerLow: Color;
          surfaceContainer: Color;
          surfaceContainerHigh: Color;
          surfaceContainerHighest: Color;
        };
        dark: {
          primary: Color;
          surfaceTint: Color;
          onPrimary: Color;
          primaryContainer: Color;
          onPrimaryContainer: Color;
          secondary: Color;
          onSecondary: Color;
          secondaryContainer: Color;
          onSecondaryContainer: Color;
          tertiary: Color;
          onTertiary: Color;
          tertiaryContainer: Color;
          onTertiaryContainer: Color;
          error: Color;
          onError: Color;
          errorContainer: Color;
          onErrorContainer: Color;
          background: Color;
          onBackground: Color;
          surface: Color;
          onSurface: Color;
          surfaceVariant: Color;
          onSurfaceVariant: Color;
          outline: Color;
          outlineVariant: Color;
          shadow: Color;
          scrim: Color;
          inverseSurface: Color;
          inverseOnSurface: Color;
          inversePrimary: Color;
          primaryFixed: Color;
          onPrimaryFixed: Color;
          primaryFixedDim: Color;
          onPrimaryFixedVariant: Color;
          secondaryFixed: Color;
          onSecondaryFixed: Color;
          secondaryFixedDim: Color;
          onSecondaryFixedVariant: Color;
          tertiaryFixed: Color;
          onTertiaryFixed: Color;
          tertiaryFixedDim: Color;
          onTertiaryFixedVariant: Color;
          surfaceDim: Color;
          surfaceBright: Color;
          surfaceContainerLowest: Color;
          surfaceContainerLow: Color;
          surfaceContainer: Color;
          surfaceContainerHigh: Color;
          surfaceContainerHighest: Color;
        };
        'dark-medium-contrast': {
          primary: Color;
          surfaceTint: Color;
          onPrimary: Color;
          primaryContainer: Color;
          onPrimaryContainer: Color;
          secondary: Color;
          onSecondary: Color;
          secondaryContainer: Color;
          onSecondaryContainer: Color;
          tertiary: Color;
          onTertiary: Color;
          tertiaryContainer: Color;
          onTertiaryContainer: Color;
          error: Color;
          onError: Color;
          errorContainer: Color;
          onErrorContainer: Color;
          background: Color;
          onBackground: Color;
          surface: Color;
          onSurface: Color;
          surfaceVariant: Color;
          onSurfaceVariant: Color;
          outline: Color;
          outlineVariant: Color;
          shadow: Color;
          scrim: Color;
          inverseSurface: Color;
          inverseOnSurface: Color;
          inversePrimary: Color;
          primaryFixed: Color;
          onPrimaryFixed: Color;
          primaryFixedDim: Color;
          onPrimaryFixedVariant: Color;
          secondaryFixed: Color;
          onSecondaryFixed: Color;
          secondaryFixedDim: Color;
          onSecondaryFixedVariant: Color;
          tertiaryFixed: Color;
          onTertiaryFixed: Color;
          tertiaryFixedDim: Color;
          onTertiaryFixedVariant: Color;
          surfaceDim: Color;
          surfaceBright: Color;
          surfaceContainerLowest: Color;
          surfaceContainerLow: Color;
          surfaceContainer: Color;
          surfaceContainerHigh: Color;
          surfaceContainerHighest: Color;
        };
        'dark-high-contrast': {
          primary: Color;
          surfaceTint: Color;
          onPrimary: Color;
          primaryContainer: Color;
          onPrimaryContainer: Color;
          secondary: Color;
          onSecondary: Color;
          secondaryContainer: Color;
          onSecondaryContainer: Color;
          tertiary: Color;
          onTertiary: Color;
          tertiaryContainer: Color;
          onTertiaryContainer: Color;
          error: Color;
          onError: Color;
          errorContainer: Color;
          onErrorContainer: Color;
          background: Color;
          onBackground: Color;
          surface: Color;
          onSurface: Color;
          surfaceVariant: Color;
          onSurfaceVariant: Color;
          outline: Color;
          outlineVariant: Color;
          shadow: Color;
          scrim: Color;
          inverseSurface: Color;
          inverseOnSurface: Color;
          inversePrimary: Color;
          primaryFixed: Color;
          onPrimaryFixed: Color;
          primaryFixedDim: Color;
          onPrimaryFixedVariant: Color;
          secondaryFixed: Color;
          onSecondaryFixed: Color;
          secondaryFixedDim: Color;
          onSecondaryFixedVariant: Color;
          tertiaryFixed: Color;
          onTertiaryFixed: Color;
          tertiaryFixedDim: Color;
          onTertiaryFixedVariant: Color;
          surfaceDim: Color;
          surfaceBright: Color;
          surfaceContainerLowest: Color;
          surfaceContainerLow: Color;
          surfaceContainer: Color;
          surfaceContainerHigh: Color;
          surfaceContainerHighest: Color;
        };
      };
      palettes: {
        primary: {
          '0': Color;
          '5': Color;
          '10': Color;
          '15': Color;
          '20': Color;
          '25': Color;
          '30': Color;
          '35': Color;
          '40': Color;
          '50': Color;
          '60': Color;
          '70': Color;
          '80': Color;
          '90': Color;
          '95': Color;
          '98': Color;
          '99': Color;
          '100': Color;
        };
        secondary: {
          '0': Color;
          '5': Color;
          '10': Color;
          '15': Color;
          '20': Color;
          '25': Color;
          '30': Color;
          '35': Color;
          '40': Color;
          '50': Color;
          '60': Color;
          '70': Color;
          '80': Color;
          '90': Color;
          '95': Color;
          '98': Color;
          '99': Color;
          '100': Color;
        };
        tertiary: {
          '0': Color;
          '5': Color;
          '10': Color;
          '15': Color;
          '20': Color;
          '25': Color;
          '30': Color;
          '35': Color;
          '40': Color;
          '50': Color;
          '60': Color;
          '70': Color;
          '80': Color;
          '90': Color;
          '95': Color;
          '98': Color;
          '99': Color;
          '100': Color;
        };
        neutral: {
          '0': Color;
          '5': Color;
          '10': Color;
          '15': Color;
          '20': Color;
          '25': Color;
          '30': Color;
          '35': Color;
          '40': Color;
          '50': Color;
          '60': Color;
          '70': Color;
          '80': Color;
          '90': Color;
          '95': Color;
          '98': Color;
          '99': Color;
          '100': Color;
        };
        'neutral-variant': {
          '0': Color;
          '5': Color;
          '10': Color;
          '15': Color;
          '20': Color;
          '25': Color;
          '30': Color;
          '35': Color;
          '40': Color;
          '50': Color;
          '60': Color;
          '70': Color;
          '80': Color;
          '90': Color;
          '95': Color;
          '98': Color;
          '99': Color;
          '100': Color;
        };
      };
    };

    typography: {
      fontFamily: string;
      fontSize: {
        h1: string;
        h2: string;
        h3: string;
        h4: string;
        h5: string;
        h6: string;
        subtitle1: string;
        subtitle2: string;
        body1: string;
        body2: string;
        button: string;
        caption: string;
        overline: string;
      };
      fontWeight: {
        light: number;
        regular: number;
        medium: number;
        bold: number;
      };
    };
    media: {
      superLarge: string;
      extraLarge: string;
      large: string;
      medium: string;
      small: string;
    };
    transition: {
      all: string;
      height: string;
      width: string;
      transform: string;
      background: string;
      opacity: string;
      color: string;
      border: string;
    };
  }
}
